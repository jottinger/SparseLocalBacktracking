/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sparselocalbacktracking;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import java.util.TimerTask;
import javax.swing.Timer;

/**
 *
 * @author thorsten
 */
public class RLTestFrame extends javax.swing.JFrame {

    Random r = new Random();
    Agent agent;

    /**
     * Creates new form RLTest
     */
    public RLTestFrame() {
        initComponents();

        rLRenderPanel1.domain = new Pendulum();
        agent = new Agent(
                rLRenderPanel1.domain.getNumStates(),
                20,
                1,
                5,
                200,
                10
        );

        java.util.Timer t = new java.util.Timer();
        t.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                if (jToggleButton1.isSelected()) {
                    for (int k = 0; k < 1000; ++k) {
                        rLRenderPanel1.domain.act(
                                agent.act(rLRenderPanel1.domain.getState())
                        );
                        agent.learn(rLRenderPanel1.domain.getReward());
                    }
                } else {
                        rLRenderPanel1.domain.act(
                                agent.getBest().compute(rLRenderPanel1.domain.getState())
                        );
                }
            }
        }, 10, 20);

        new Timer(1, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                rLRenderPanel1.repaint();
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rLRenderPanel1 = new sparselocalbacktracking.RLRenderPanel();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RL Test");

        javax.swing.GroupLayout rLRenderPanel1Layout = new javax.swing.GroupLayout(rLRenderPanel1);
        rLRenderPanel1.setLayout(rLRenderPanel1Layout);
        rLRenderPanel1Layout.setHorizontalGroup(
            rLRenderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        rLRenderPanel1Layout.setVerticalGroup(
            rLRenderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );

        getContentPane().add(rLRenderPanel1, java.awt.BorderLayout.CENTER);

        jToggleButton1.setText("Training");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

    }//GEN-LAST:event_jToggleButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jToggleButton1;
    private sparselocalbacktracking.RLRenderPanel rLRenderPanel1;
    // End of variables declaration//GEN-END:variables
}
